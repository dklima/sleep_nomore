name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
        arch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Get dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Run tests
      run: go test -v -short -race -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Run benchmarks
      run: go test -bench=. -benchmem ./...
    
    - name: Build binary
      env:
        GOOS: windows
        GOARCH: ${{ matrix.arch }}
      run: go build -ldflags="-H windowsgui -s -w" -o sleepnomore_${{ matrix.arch }}.exe main.go
    
    - name: Upload coverage
      if: matrix.go-version == '1.21' && matrix.arch == 'amd64'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sleepnomore-${{ matrix.go-version }}-${{ matrix.arch }}
        path: sleepnomore_${{ matrix.arch }}.exe

  lint:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m